{"version":3,"sources":["assets/images/splash.gif","assets/images/github.svg","assets/images/linkedIn.svg","assets/images/twitter.svg","components/Jumbotron/index.js","components/AboutMe/index.js","pages/Home.js","pages/Contact.js","components/ProjectCard/index.js","assets/arrays/ProjectData.js","pages/Projects.js","pages/Resume.js","components/NavMain/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Jumbotron","className","alt","AboutMe","Row","Col","lg","xs","href","id","src","gitHubIcon","linkedInIcon","twitterIcon","pixelGif","Home","Contact","ProjectCard","props","name","imgSrc","style","display","deploySrc","Button","color","backgroundColor","codeSrc","description","responsibilities","projectData","responsibilites","Projects","projectComponents","map","project","key","Resume","NavMain","useState","isOpen","setIsOpen","Navbar","expand","NavbarBrand","to","NavbarToggler","onClick","backgroundImage","borderColor","Collapse","navbar","Nav","NavItem","NavLink","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,+RCa5BC,MAVf,WACI,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,QAAQC,IAAI,KAC3B,wBAAID,UAAU,SAAd,uGACA,wBAAIA,UAAU,UAAd,oB,4FCqCGE,MArCf,WACI,OACI,kBAACC,EAAA,EAAD,CAAKH,UAAU,YACX,kBAACI,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKE,GAAG,IAAID,GAAG,IAAIL,UAAU,WACzB,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aAAd,YACA,uBAAGA,UAAU,aAAb,gJAGR,kBAACI,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKL,UAAU,WACX,uBAAGO,KAAK,oCAAoCC,GAAG,SAC3C,yBAAKC,IAAKC,IAAYF,GAAG,gBAE7B,uBAAGD,KAAK,yDAAyDC,GAAG,SAChE,yBAAKC,IAAKE,IAAcH,GAAG,kBAE/B,uBAAGD,KAAK,sCAAsCC,GAAG,SAC7C,yBAAKC,IAAKG,IAAaJ,GAAG,mBAItC,kBAACJ,EAAA,EAAD,CAAKC,GAAG,MAER,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKI,IAAKI,IAAUL,GAAG,WAAWP,IAAI,0BCrBvCa,MATf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCGC,MAPf,WACI,OACI,wC,gBCmBOC,MAnBf,SAAqBC,GACjB,OACI,6BAASjB,UAAU,aACf,yBAAKA,UAAU,SACX,wBAAIA,UAAU,UAAUiB,EAAMC,MAC9B,yBAAKlB,UAAU,OAAOS,IAAKQ,EAAME,OAAQlB,IAAI,kBAC7C,uBAAGD,UAAU,OAAOoB,MAAO,CAACC,SAAUJ,EAAMK,WAAa,QAASf,KAAMU,EAAMK,WAAW,kBAACC,EAAA,EAAD,CAAQH,MAAO,CAACI,MAAO,QAASC,gBAAiB,oBAAjD,iBACzF,uBAAGzB,UAAU,OAAOO,KAAMU,EAAMS,SAAS,kBAACH,EAAA,EAAD,CAAQH,MAAO,CAACI,MAAO,QAASC,gBAAiB,oBAAjD,iBAE7C,yBAAKzB,UAAU,UACX,uBAAGA,UAAU,YAAYiB,EAAMU,aAC/B,2BAAIV,EAAMW,qBCMXC,EArBK,CAChB,CACIrB,GAAI,EACJU,KAAM,QACNC,OAAQ,uEACRQ,YAAa,0BACbL,UAAW,qBACXI,QAAS,0CACTI,gBAAiB,kFAErB,CACItB,GAAI,EACJU,KAAM,aACNC,OAAQ,yEACRQ,YAAa,0BACbL,UAAW,qBACXI,QAAS,oCACTI,gBAAiB,mFCSVC,MAtBf,WAEI,IAAMC,EAAmBH,EAAYI,KAAI,SAAAC,GACrC,OACI,kBAAC,EAAD,CAAaC,IAAKD,EAAQ1B,GAClBU,KAAMgB,EAAQhB,KACdC,OAAQe,EAAQf,OAChBQ,YAAaO,EAAQP,YACrBL,UAAWY,EAAQZ,UACnBI,QAASQ,EAAQR,QACjBE,iBAAkBM,EAAQJ,qBAI1C,OACI,6BACKE,ICZEI,MANf,WACI,OACI,uCCyDOC,EA5CC,SAACpB,GAAW,IAAD,EACGqB,oBAAS,GADZ,mBAClBC,EADkB,KACVC,EADU,KAKzB,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAK1C,UAAU,YACxB,kBAAC2C,EAAA,EAAD,KAAa,kBAAC,IAAD,CAAMC,GAAI,IAAKpC,GAAG,WAAlB,oBACb,kBAACqC,EAAA,EAAD,CAAeC,QANV,kBAAMN,GAAWD,IAMUnB,MAAO,CAAC2B,gBAAgB,8PAA8PC,YAAa,WACnU,kBAACC,EAAA,EAAD,CAAUV,OAAQA,EAAQW,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAKnD,UAAU,UAAUkD,QAAM,GAC7B,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASrD,UAAU,YAAW,kBAAC,IAAD,CAAM4C,GAAI,YAAa5C,UAAU,YAAjC,cAEhC,kBAACoD,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAASrD,UAAU,YAAW,kBAAC,IAAD,CAAM4C,GAAI,UAAW5C,UAAU,YAA/B,YAE9B,kBAACoD,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAASrD,UAAU,YAAW,kBAAC,IAAD,CAAM4C,GAAI,WAAY5C,UAAU,YAAhC,gBAMpC,kBAAC,IAAD,KACM,kBAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,WACR,kBAAC,EAAD,UCpCLC,MAXf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,SCEYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a446c837.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splash.4438deca.gif\";","module.exports = __webpack_public_path__ + \"static/media/github.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedIn.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.9a35c67b.svg\";","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Jumbotron() {\r\n    return(\r\n        <div className='jumboCont'>\r\n            <img className='jumbo' alt=''></img>\r\n            <h3 className='quote'>“A well-designed game is a guided missile to the motivational heart of the human psyche.”</h3>\r\n            <h2 className='quote2'>~Kevin Werbach</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from 'react';\r\nimport pixelGif from '../../assets/images/splash.gif';\r\nimport gitHubIcon from '../../assets/images/github.svg';\r\nimport linkedInIcon from '../../assets/images/linkedIn.svg'\r\nimport twitterIcon from '../../assets/images/twitter.svg'\r\nimport './style.css';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nfunction AboutMe() {\r\n    return(\r\n        <Row className=\"aboutRow\">\r\n            <Col lg=\"3\"></Col>\r\n            <Col xs=\"6\" lg=\"2\" className=\"aboutMe\">\r\n                <div className=\"aboutText\">\r\n                    <h3 className=\"aboutHead\">About Me</h3>\r\n                    <p className=\"aboutBody\">I am a full-stack developer from Charlotte, NC in the humble beginnings of what I hope to be a life long career in video game development.</p>\r\n                </div>\r\n            </Col>\r\n            <Col lg=\"1\">\r\n                <div className='iconRow'>\r\n                    <a href='https://github.com/PhilipLemaster' id='icon1'>\r\n                        <img src={gitHubIcon} id='githubIcon'></img>\r\n                    </a>\r\n                    <a href='https://www.linkedin.com/in/philip-lemaster-21930419a/' id='icon2'>\r\n                        <img src={linkedInIcon} id='linkedInIcon'></img>\r\n                    </a>\r\n                    <a href='https://twitter.com/PhilipLemaster2' id='icon3'>\r\n                        <img src={twitterIcon} id='twitterIcon'></img>\r\n                    </a>\r\n                </div>\r\n            </Col>\r\n            <Col lg=\"1\">\r\n            </Col>\r\n            <Col lg=\"2\">\r\n                <img src={pixelGif} id='pixelGif' alt='Pixelized Portrait'></img>\r\n            </Col>\r\n            \r\n                \r\n                \r\n                \r\n        </Row>\r\n        \r\n    )\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport AboutMe from '../components/AboutMe';\r\n\r\nfunction Home() {\r\n    return(\r\n        <div>\r\n            <Jumbotron />\r\n            <AboutMe />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction Contact() {\r\n    return(\r\n        <h1>Contact</h1>\r\n        \r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './style.css';\r\nimport {Button} from 'reactstrap';\r\n\r\nfunction ProjectCard(props) {\r\n    return(\r\n        <section className=\"wholeCard\">\r\n            <div className=\"leftP\">\r\n                <h1 className=\"pTitle\">{props.name}</h1>\r\n                <img className=\"pImg\" src={props.imgSrc} alt='project image'></img>\r\n                <a className=\"aBut\" style={{display: !props.deploySrc && \"none\"}} href={props.deploySrc}><Button style={{color: 'white', backgroundColor: 'rgb(36, 36, 36)'}}>Deployed App</Button></a>\r\n                <a className=\"aBut\" href={props.codeSrc}><Button style={{color: 'white', backgroundColor: 'rgb(36, 36, 36)'}}>Github Repo</Button></a>\r\n            </div>\r\n            <div className=\"rightP\">\r\n                <p className=\"pDescrip\">{props.description}</p>\r\n                <p>{props.responsibilities}</p>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n    \r\n}\r\n\r\nexport default ProjectCard;","const projectData = [\r\n    {\r\n        id: 1,\r\n        name: 'BotRS',\r\n        imgSrc: 'https://philiplemaster.github.io/Philip-Lemaster/assets/project4.PNG',\r\n        description: 'This is the description',\r\n        deploySrc: 'https://google.com',\r\n        codeSrc: 'https://github.com/PhilipLemaster/BotRS',\r\n        responsibilites: 'I controlled everything and was responsible for babysitting a bunch of scrubs.'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Retro City',\r\n        imgSrc: 'https://i.ibb.co/7ymMYR9/F7748-ED4-6-C49-4-A25-8595-C80-E797026-E3.jpg',\r\n        description: 'This is the description',\r\n        deploySrc: 'https://google.com',\r\n        codeSrc: 'https://github.com/PhilipLemaster',\r\n        responsibilites: 'I controlled everything and was responsible for babysitting a bunch of scrubs.'\r\n    }\r\n]\r\n\r\nexport default projectData","import React from 'react';\r\nimport ProjectCard from '../components/ProjectCard';\r\nimport projectData from '../assets/arrays/ProjectData';\r\n\r\nfunction Projects() {\r\n\r\n    const projectComponents= projectData.map(project => {\r\n        return(\r\n            <ProjectCard key={project.id} \r\n                    name={project.name} \r\n                    imgSrc={project.imgSrc}\r\n                    description={project.description}\r\n                    deploySrc={project.deploySrc}\r\n                    codeSrc={project.codeSrc}\r\n                    responsibilities={project.responsibilites}/>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {projectComponents}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\nfunction Resume() {\r\n    return(\r\n        <h2>Resume</h2>\r\n    )\r\n}\r\n\r\nexport default Resume;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap';\r\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Home from '../../pages/Home'\r\nimport Contact from '../../pages/Contact';\r\nimport Projects from '../../pages/Projects';\r\nimport Resume from '../../pages/Resume';\r\n\r\nconst NavMain = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Navbar expand=\"md\" className='wholeNav'>\r\n            <NavbarBrand><Link to={'/'} id='navName'>Philip Lemaster</Link></NavbarBrand>\r\n            <NavbarToggler onClick={toggle} style={{backgroundImage: `url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='-10 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255,102,203, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\")`, borderColor: 'white'}}/>\r\n            <Collapse isOpen={isOpen} navbar>\r\n              <Nav className=\"mr-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink className='navLinks'><Link to={'/projects'} className='nav-link'>Projects</Link></NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink className='navLinks'><Link to={'/resume'} className='nav-link'>Resume</Link></NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink className='navLinks'><Link to={'/contact'} className='nav-link'>Contact</Link></NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Navbar>\r\n\r\n          <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route path=\"/projects\">\r\n                    <Projects />\r\n                </Route>\r\n                <Route path=\"/contact\">\r\n                    <Contact />\r\n                </Route>\r\n                <Route path=\"/resume\">\r\n                    <Resume />\r\n                </Route>\r\n            </Switch>\r\n    </HashRouter>\r\n          \r\n  );\r\n}\r\n\r\nexport default NavMain;","import React from \"react\";\nimport {\n  HashRouter as Router\n} from \"react-router-dom\";\nimport NavMain from \"./components/NavMain\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <NavMain />\n      </Router>\n    </div>\n    \n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n      <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}