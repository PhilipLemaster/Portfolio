{"version":3,"sources":["assets/images/splash.gif","assets/images/github.svg","assets/images/linkedIn.svg","assets/images/twitter.svg","components/Jumbotron/index.js","components/AboutMe/index.js","pages/Home.js","components/ContactCard/index.js","pages/Contact.js","components/ProjectCard/index.js","assets/arrays/ProjectData.js","pages/Projects.js","components/NavMain/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Jumbotron","className","alt","AboutMe","Row","Col","lg","xs","href","id","src","gitHubIcon","linkedInIcon","twitterIcon","pixelGif","Home","ContactCard","Contact","ProjectCard","props","style","margin","sm","name","imgSrc","description","responsibilities","display","deploySrc","Button","color","backgroundColor","codeSrc","projectData","responsibilites","Projects","projectComponents","map","project","key","NavMain","useState","isOpen","setIsOpen","Navbar","expand","NavbarBrand","to","NavbarToggler","onClick","backgroundImage","borderColor","Collapse","navbar","Nav","NavItem","NavLink","target","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.963054f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splash.4438deca.gif\";","module.exports = __webpack_public_path__ + \"static/media/github.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedIn.8cc2d3a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.9a35c67b.svg\";","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Jumbotron() {\r\n    return(\r\n        <div className='jumboCont'>\r\n            <img className='jumbo' alt=''></img>\r\n            <h3 className='quote'>“A well-designed game is a guided missile to the motivational heart of the human psyche.”</h3>\r\n            <h2 className='quote2'>~Kevin Werbach</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from 'react';\r\nimport pixelGif from '../../assets/images/splash.gif';\r\nimport gitHubIcon from '../../assets/images/github.svg';\r\nimport linkedInIcon from '../../assets/images/linkedIn.svg'\r\nimport twitterIcon from '../../assets/images/twitter.svg'\r\nimport './style.css';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nfunction AboutMe() {\r\n    return(\r\n        <Row className=\"aboutRow\">\r\n            <Col lg=\"3\"></Col>\r\n            <Col xs=\"6\" lg=\"2\" className=\"aboutMe\">\r\n                <div className=\"aboutText\">\r\n                    <h3 className=\"aboutHead\">About Me</h3>\r\n                    <p className=\"aboutBody\">I am a full-stack developer from Charlotte, NC in the humble beginnings of what I hope to be a life long career in video game development.</p>\r\n                </div>\r\n            </Col>\r\n            <Col lg=\"1\">\r\n                <div className='iconRow'>\r\n                    <a href='https://github.com/PhilipLemaster' id='icon1'>\r\n                        <img src={gitHubIcon} id='githubIcon'></img>\r\n                    </a>\r\n                    <a href='https://www.linkedin.com/in/philip-lemaster-21930419a/' id='icon2'>\r\n                        <img src={linkedInIcon} id='linkedInIcon'></img>\r\n                    </a>\r\n                    <a href='https://twitter.com/PhilipLemaster2' id='icon3'>\r\n                        <img src={twitterIcon} id='twitterIcon'></img>\r\n                    </a>\r\n                </div>\r\n            </Col>\r\n            <Col lg=\"1\">\r\n            </Col>\r\n            <Col lg=\"2\">\r\n                <img src={pixelGif} id='pixelGif' alt='Pixelized Portrait'></img>\r\n            </Col>\r\n            \r\n                \r\n                \r\n                \r\n        </Row>\r\n        \r\n    )\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport AboutMe from '../components/AboutMe';\r\n\r\nfunction Home() {\r\n    return(\r\n        <div>\r\n            <Jumbotron />\r\n            <AboutMe />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction ContactCard() {\r\n    return(\r\n        <div className='contactWhole'>\r\n            <h1 className='contactHead'>Contact Me</h1>\r\n            <div className='contactBody'>\r\n                <h3 id='phone'>(980)355-1739</h3>\r\n                <h3 id='email'>philiplemaster@yahoo.com</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ContactCard;","import React from 'react';\r\nimport ContactCard from '../components/ContactCard';\r\n\r\n\r\nfunction Contact() {\r\n    return(\r\n        <div>\r\n            <ContactCard />\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './style.css';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\n\r\nfunction ProjectCard(props) {\r\n    return(\r\n        <Row className=\"wholeCard\" style={{margin: 'auto'}}>\r\n            <Col lg=\"2\"></Col>\r\n            <Col lg=\"4\" sm=\"12\" className=\"leftP\">\r\n                <h1 className=\"pTitle\">{props.name}</h1>\r\n                <img className=\"pImg\" src={props.imgSrc} alt='project image'></img>\r\n            </Col>\r\n            <Col lg=\"1\"></Col>\r\n            <Col lg=\"4\" sm=\"12\" className=\"rightP\">\r\n                <p className=\"pDescrip\">Description: {props.description}</p>\r\n                <p>Tech Utilized: {props.responsibilities}</p>\r\n                <a className=\"aBut\" style={{display: !props.deploySrc && \"none\"}} href={props.deploySrc}><Button style={{color: 'white', backgroundColor: 'rgb(36, 36, 36)'}}>Deployed App</Button></a>\r\n                <a className=\"aBut\" href={props.codeSrc}><Button style={{color: 'white', backgroundColor: 'rgb(36, 36, 36)'}}>Github Repo</Button></a>\r\n            </Col>\r\n            <Col lg=\"1\"></Col>\r\n        </Row>\r\n    )\r\n    \r\n}\r\n\r\nexport default ProjectCard;","const projectData = [\r\n    {\r\n        id: 1,\r\n        name: 'Chq Mate',\r\n        imgSrc: 'https://i.ibb.co/MZ1gf3j/project6.png',\r\n        description: 'Social media app designed to connect gamers with prospective party members and quest partners.',\r\n        deploySrc: 'https://chq-mate.herokuapp.com/',\r\n        codeSrc: 'https://github.com/PhilipLemaster/Chq-Mate',\r\n        responsibilites: 'Full MERN stack, Auth0, Reactstrap'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'BotRS',\r\n        imgSrc: 'https://philiplemaster.github.io/Philip-Lemaster/assets/project4.PNG',\r\n        description: 'Automation for repetitive farming tasks in OSRS.',\r\n        codeSrc: 'https://github.com/PhilipLemaster/BotRS',\r\n        responsibilites: 'HTML/CSS, Node.js, Materialize.CSS, Robot.js, Express.js, Passport.js'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Retro City',\r\n        imgSrc: 'https://i.ibb.co/7ymMYR9/F7748-ED4-6-C49-4-A25-8595-C80-E797026-E3.jpg',\r\n        description: 'Comprehensive database of Retro games featuring general information and reference images.',\r\n        deploySrc: 'https://philiplemaster.github.io/Retro-City/',\r\n        codeSrc: 'https://github.com/PhilipLemaster/Retro-City',\r\n        responsibilites: 'HTML/CSS, Javascript, Adobe Illustrator, Foundation.CSS, AJAX, Localstorage'\r\n    }\r\n    // {\r\n    //     id: 3,\r\n    //     name: 'README.md Generator',\r\n    //     imgSrc: 'https://raw.githubusercontent.com/PhilipLemaster/ReadME-Generator/master/assets/READMEgenerator.gif',\r\n    //     description: 'Generate formatted and orderly README.md files from node CLI.',\r\n    //     codeSrc: 'https://github.com/PhilipLemaster/ReadME-Generator',\r\n    //     responsibilites: 'Node.js, Inquirer.js, fs'\r\n    // },\r\n    // {\r\n    //     id: 4,\r\n    //     name: 'Employee Management System',\r\n    //     imgSrc: 'https://i.ibb.co/8557wcC/project5.png',\r\n    //     description: 'CLI app to manage and update employees, managers, and departments.',\r\n    //     codeSrc: 'https://github.com/PhilipLemaster/Employee-Management-System',\r\n    //     responsibilites: 'Node.js, mySQL'\r\n    // }\r\n]\r\n\r\nexport default projectData","import React from 'react';\r\nimport ProjectCard from '../components/ProjectCard';\r\nimport projectData from '../assets/arrays/ProjectData';\r\n\r\nfunction Projects() {\r\n\r\n    const projectComponents= projectData.map(project => {\r\n        return(\r\n            <ProjectCard key={project.id} \r\n                    name={project.name} \r\n                    imgSrc={project.imgSrc}\r\n                    description={project.description}\r\n                    deploySrc={project.deploySrc}\r\n                    codeSrc={project.codeSrc}\r\n                    responsibilities={project.responsibilites}/>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {projectComponents}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Projects;","import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap';\r\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport Home from '../../pages/Home'\r\nimport Contact from '../../pages/Contact';\r\nimport Projects from '../../pages/Projects';\r\n\r\nconst NavMain = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Navbar expand=\"md\" className='wholeNav'>\r\n            <NavbarBrand><Link to={'/'} id='navName'>Philip Lemaster</Link></NavbarBrand>\r\n            <NavbarToggler onClick={toggle} style={{backgroundImage: `url(\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='-10 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255,102,203, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\")`, borderColor: 'white'}}/>\r\n            <Collapse isOpen={isOpen} navbar>\r\n              <Nav className=\"mr-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink className='navLinks'><Link to={'/projects'} className='nav-link'>Projects</Link></NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink className='navLinks'><a href={'https://pdfhost.io/v/eEZqR2WHL_PL_RESUMEpdf.pdf'} className='nav-link' target=\"_blank\">Resume</a></NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink className='navLinks'><Link to={'/contact'} className='nav-link'>Contact</Link></NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Navbar>\r\n\r\n          <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route path=\"/projects\">\r\n                    <Projects />\r\n                </Route>\r\n                <Route path=\"/contact\">\r\n                    <Contact />\r\n                </Route>\r\n            </Switch>\r\n    </HashRouter>\r\n          \r\n  );\r\n}\r\n\r\nexport default NavMain;","import React from \"react\";\r\nimport {\r\n  HashRouter as Router\r\n} from \"react-router-dom\";\r\nimport NavMain from \"./components/NavMain\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <NavMain />\r\n      </Router>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n      <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}